---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: eks-demo # 생성할 EKS 클러스터명
  region: ap-northeast-1 # 클러스터를 생성할 리전
  version: "1.24"

vpc:
  subnets:
    private:
      ap-northeast-1a: { id: subnet-0fccc61c3cbf88023 }
      ap-northeast-1c: { id: subnet-08cdab8c98e5ae84a }

managedNodeGroups:
  - name: T4-nodeGroup-nginx # 클러스터의 노드 그룹명
    instanceType: t3.medium # 클러스터 워커 노드의 인스턴스 타입
    minSize: 1
    desiredCapacity: 1
    maxSize: 2
    volumeSize: 20
    privateNetworking: true
    subnets:
      - ap-northeast-1a
      - ap-northeast-1c
    labels: {app: nginx}
    ssh:
      enableSsm: true
    iam:
      withAddonPolicies:
        imageBuilder: true # Amazon ECR에 대한 권한 추가
        albIngress: true  # albIngress에 대한 권한 추가
        cloudWatch: true # cloudWatch에 대한 권한 추가
        autoScaler: true # auto scaling에 대한 권한 추가
        ebs: true # EBS CSI Driver에 대한 권한 추가
  - name: T4-nodeGroup-tomcat # 클러스터의 노드 그룹명
    instanceType: t3.medium # 클러스터 워커 노드의 인스턴스 타입
    minSize: 1
    desiredCapacity: 1
    maxSize: 2
    volumeSize: 20
    privateNetworking: true
    subnets:
      - ap-northeast-1a
      - ap-northeast-1c
    labels: {app: tomcat}
    ssh:
      enableSsm: true
    iam:
      withAddonPolicies:
        imageBuilder: true # Amazon ECR에 대한 권한 추가
        albIngress: true  # albIngress에 대한 권한 추가
        cloudWatch: true # cloudWatch에 대한 권한 추가
        autoScaler: true # auto scaling에 대한 권한 추가
        ebs: true # EBS CSI Driver에 대한 권한 추가

cloudWatch:
  clusterLogging:
    enableTypes: ["*"]

iam:
  withOIDC: true
